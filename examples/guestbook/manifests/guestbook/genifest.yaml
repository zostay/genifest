files:
  include:
    - backend-deployment.yaml
    - backend-service.yaml
    - configmap.yaml
    - frontend-deployment.yaml
    - frontend-service.yaml
    - ingress.yaml
    - secret.yaml

changes:
  - tag: production
    fileSelector: "*-deployment.yaml"
    keySelector: .spec.replicas
    valueFrom:
      call:
        function: get-replicas
        args:
          - name: environment
            valueFrom:
              default:
                value: production

  - tag: staging
    fileSelector: "*-deployment.yaml"
    keySelector: .spec.replicas
    valueFrom:
      call:
        function: get-replicas
        args:
          - name: environment
            valueFrom:
              default:
                value: staging

  - fileSelector: frontend-deployment.yaml
    keySelector: .spec.template.spec.containers[] | select(.name == "frontend") | .image
    valueFrom:
      call:
        function: get-image-tag
        args:
          - name: service
            valueFrom:
              default:
                value: guestbook-frontend
          - name: environment
            valueFrom:
              default:
                value: dev

  - tag: config
    fileSelector: configmap.yaml
    documentSelector:
      kind: ConfigMap
      metadata.name: guestbook-config
    keySelector: .data.["app.yaml"]
    valueFrom:
      file:
        source: app.yaml

  - tag: image
    fileSelector: backend-deployment.yaml
    keySelector: .spec.template.spec.containers[] | select(.name == "backend") | .image
    valueFrom:
      call:
        function: get-image-tag
        args:
          - name: service
            valueFrom:
              default:
                value: guestbook-backend
          - name: environment
            valueFrom:
              default:
                value: dev

  - tag: config
    fileSelector: configmap.yaml
    documentSelector:
      kind: ConfigMap
      metadata.name: guestbook-quotes
    keySelector: .data.quote
    valueFrom:
      pipeline:
        - valueFrom:
            call:
              function: quote
              args:
                - name: text
                  valueFrom:
                    documentRef:
                      keySelector: .metadata.annotations["genifest.qubling.com/quote"] // "tyranny"
          output: quotation
        - valueFrom:
            call:
              function: rotN
              args:
                - name: text
                  valueFrom:
                    argRef:
                      name: quotation
  - tag: environment
    fileSelector: frontend-deployment.yaml
    keySelector: .spec.template.spec.containers[] | select(.name == "frontend") | .env[] | select(.name == "NODE_ENV") | .value
    valueFrom:
      default:
        value: development